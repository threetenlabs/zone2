// Mocks generated by Mockito 5.4.4 from annotations
// in bedlam/test/modules/login/component/login_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;

import 'package:app/app/models/user.dart' as _i10;
import 'package:app/app/services/auth_service.dart' as _i11;
import 'package:app/app/services/fcm_service.dart' as _i7;
import 'package:app/app/services/shared_preferences_service.dart' as _i9;
import 'package:cloud_firestore/cloud_firestore.dart' as _i4;
import 'package:firebase_auth/firebase_auth.dart' as _i3;
import 'package:fluttermoji/fluttermoji.dart' as _i8;
import 'package:get/get.dart' as _i6;
import 'package:google_sign_in/google_sign_in.dart' as _i5;
import 'package:logger/logger.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i13;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLogger_0 extends _i1.SmartFake implements _i2.Logger {
  _FakeLogger_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseAuth_1 extends _i1.SmartFake implements _i3.FirebaseAuth {
  _FakeFirebaseAuth_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseFirestore_2 extends _i1.SmartFake implements _i4.FirebaseFirestore {
  _FakeFirebaseFirestore_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoogleSignIn_3 extends _i1.SmartFake implements _i5.GoogleSignIn {
  _FakeGoogleSignIn_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxn_4<T> extends _i1.SmartFake implements _i6.Rxn<T> {
  _FakeRxn_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFcmService_5 extends _i1.SmartFake implements _i7.FcmService {
  _FakeFcmService_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFluttermojiController_6 extends _i1.SmartFake implements _i8.FluttermojiController {
  _FakeFluttermojiController_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharedPreferencesService_7 extends _i1.SmartFake
    implements _i9.SharedPreferencesService {
  _FakeSharedPreferencesService_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRx_8<T> extends _i1.SmartFake implements _i6.Rx<T> {
  _FakeRx_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxBool_9 extends _i1.SmartFake implements _i6.RxBool {
  _FakeRxBool_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBedlamUserModel_10 extends _i1.SmartFake implements _i10.UserModel {
  _FakeBedlamUserModel_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i11.AuthService {
  @override
  _i2.Logger get logger => (super.noSuchMethod(
        Invocation.getter(#logger),
        returnValue: _FakeLogger_0(
          this,
          Invocation.getter(#logger),
        ),
        returnValueForMissingStub: _FakeLogger_0(
          this,
          Invocation.getter(#logger),
        ),
      ) as _i2.Logger);

  @override
  _i3.FirebaseAuth get auth => (super.noSuchMethod(
        Invocation.getter(#auth),
        returnValue: _FakeFirebaseAuth_1(
          this,
          Invocation.getter(#auth),
        ),
        returnValueForMissingStub: _FakeFirebaseAuth_1(
          this,
          Invocation.getter(#auth),
        ),
      ) as _i3.FirebaseAuth);

  @override
  _i4.FirebaseFirestore get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeFirebaseFirestore_2(
          this,
          Invocation.getter(#db),
        ),
        returnValueForMissingStub: _FakeFirebaseFirestore_2(
          this,
          Invocation.getter(#db),
        ),
      ) as _i4.FirebaseFirestore);

  @override
  _i5.GoogleSignIn get googleSignIn => (super.noSuchMethod(
        Invocation.getter(#googleSignIn),
        returnValue: _FakeGoogleSignIn_3(
          this,
          Invocation.getter(#googleSignIn),
        ),
        returnValueForMissingStub: _FakeGoogleSignIn_3(
          this,
          Invocation.getter(#googleSignIn),
        ),
      ) as _i5.GoogleSignIn);

  @override
  _i6.Rxn<_i3.User> get firebaseUser => (super.noSuchMethod(
        Invocation.getter(#firebaseUser),
        returnValue: _FakeRxn_4<_i3.User>(
          this,
          Invocation.getter(#firebaseUser),
        ),
        returnValueForMissingStub: _FakeRxn_4<_i3.User>(
          this,
          Invocation.getter(#firebaseUser),
        ),
      ) as _i6.Rxn<_i3.User>);

  @override
  set firebaseUser(_i6.Rxn<_i3.User>? _firebaseUser) => super.noSuchMethod(
        Invocation.setter(
          #firebaseUser,
          _firebaseUser,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.FcmService get fcmService => (super.noSuchMethod(
        Invocation.getter(#fcmService),
        returnValue: _FakeFcmService_5(
          this,
          Invocation.getter(#fcmService),
        ),
        returnValueForMissingStub: _FakeFcmService_5(
          this,
          Invocation.getter(#fcmService),
        ),
      ) as _i7.FcmService);

  @override
  _i8.FluttermojiController get fluttermojiController => (super.noSuchMethod(
        Invocation.getter(#fluttermojiController),
        returnValue: _FakeFluttermojiController_6(
          this,
          Invocation.getter(#fluttermojiController),
        ),
        returnValueForMissingStub: _FakeFluttermojiController_6(
          this,
          Invocation.getter(#fluttermojiController),
        ),
      ) as _i8.FluttermojiController);

  @override
  _i9.SharedPreferencesService get sharedPrefs => (super.noSuchMethod(
        Invocation.getter(#sharedPrefs),
        returnValue: _FakeSharedPreferencesService_7(
          this,
          Invocation.getter(#sharedPrefs),
        ),
        returnValueForMissingStub: _FakeSharedPreferencesService_7(
          this,
          Invocation.getter(#sharedPrefs),
        ),
      ) as _i9.SharedPreferencesService);

  @override
  Map<String, dynamic> get defaultFluttermoji => (super.noSuchMethod(
        Invocation.getter(#defaultFluttermoji),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i6.Rx<_i10.UserModel> get appUser => (super.noSuchMethod(
        Invocation.getter(#bedlamUser),
        returnValue: _FakeRx_8<_i10.UserModel>(
          this,
          Invocation.getter(#bedlamUser),
        ),
        returnValueForMissingStub: _FakeRx_8<_i10.UserModel>(
          this,
          Invocation.getter(#bedlamUser),
        ),
      ) as _i6.Rx<_i10.UserModel>);

  @override
  _i6.RxBool get isAuthenticatedUser => (super.noSuchMethod(
        Invocation.getter(#isAuthenticatedUser),
        returnValue: _FakeRxBool_9(
          this,
          Invocation.getter(#isAuthenticatedUser),
        ),
        returnValueForMissingStub: _FakeRxBool_9(
          this,
          Invocation.getter(#isAuthenticatedUser),
        ),
      ) as _i6.RxBool);

  @override
  _i12.Stream<_i3.User?> get user => (super.noSuchMethod(
        Invocation.getter(#user),
        returnValue: _i12.Stream<_i3.User?>.empty(),
        returnValueForMissingStub: _i12.Stream<_i3.User?>.empty(),
      ) as _i12.Stream<_i3.User?>);

  @override
  _i12.Future<_i10.UserModel> getUser() => (super.noSuchMethod(
        Invocation.method(
          #getBedlamUser,
          [],
        ),
        returnValue: _i12.Future<_i10.UserModel>.value(_FakeBedlamUserModel_10(
          this,
          Invocation.method(
            #getBedlamUser,
            [],
          ),
        )),
        returnValueForMissingStub: _i12.Future<_i10.UserModel>.value(_FakeBedlamUserModel_10(
          this,
          Invocation.method(
            #getBedlamUser,
            [],
          ),
        )),
      ) as _i12.Future<_i10.UserModel>);

  @override
  dynamic updateUserDetails(_i10.UserModel? bedlamUser) => super.noSuchMethod(
        Invocation.method(
          #updateBedlamUserDetails,
          [bedlamUser],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic updateUserSvg(
    String? svgString,
    String? svgConfig,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateBedlamUserSvg,
          [
            svgString,
            svgConfig,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.UserModel getOrCreateUser(_i4.DocumentSnapshot<Map<String, dynamic>>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrCreateBedlamUser,
          [documentSnapshot],
        ),
        returnValue: _FakeBedlamUserModel_10(
          this,
          Invocation.method(
            #getOrCreateBedlamUser,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeBedlamUserModel_10(
          this,
          Invocation.method(
            #getOrCreateBedlamUser,
            [documentSnapshot],
          ),
        ),
      ) as _i10.UserModel);

  @override
  String generateRandomName() => (super.noSuchMethod(
        Invocation.method(
          #generateRandomName,
          [],
        ),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.method(
            #generateRandomName,
            [],
          ),
        ),
        returnValueForMissingStub: _i13.dummyValue<String>(
          this,
          Invocation.method(
            #generateRandomName,
            [],
          ),
        ),
      ) as String);

  @override
  _i10.UserModel createUser() => (super.noSuchMethod(
        Invocation.method(
          #createBedlamUser,
          [],
        ),
        returnValue: _FakeBedlamUserModel_10(
          this,
          Invocation.method(
            #createBedlamUser,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeBedlamUserModel_10(
          this,
          Invocation.method(
            #createBedlamUser,
            [],
          ),
        ),
      ) as _i10.UserModel);

  @override
  _i12.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> signInAnonymously() => (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<bool> convertWithGoogle() => (super.noSuchMethod(
        Invocation.method(
          #convertWithGoogle,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> convertWithApple() => (super.noSuchMethod(
        Invocation.method(
          #convertWithApple,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<void> signInWithGoogle() => (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> webSignInWithGoogle() => (super.noSuchMethod(
        Invocation.method(
          #webSignInWithGoogle,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> signInWithApple() => (super.noSuchMethod(
        Invocation.method(
          #signInWithApple,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}
